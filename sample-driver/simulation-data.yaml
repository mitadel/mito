# 
domain: 
    mesh: mesh.msh # Volume and boundary region labels in the mesh
    element type: TET
    tetra: 0        # to do mesh refinement with tetra subdivision

# Complete collection of physics 
#Â [structure.statics, structure.dynamics, structure.modal, 
#   thermal.steadystate, thermal.transient, 
#   magnetic.statics, electric.statics, ...
#   fluid.steadystate, fluid.dynamics,
# structure, fluid, temperature, ... are associated to one single primal variable
# statics, dynamics, fracture, lubrication, ... add components of the governing equations
physics:
    - structure: 
        response: statics
        #- structure.dynamics: # explicitnewmark, implicitnewmark
        polynomial: 2
        discretization: DG
        where: body, body.internalboundary # body is a label identifying a piece of the mesh
    - thermal:
        response: steadystate
        polynomial: 1
        discretization: CG
        where: body, body.internalboundary
    - fluid: 
        response: steadystate
        polynomial: 1
        discretization: CG
        where: body, body.internalboundary


problem setting:
    structure:
        -   region: [leftboundary, rightboundary]
            type: FixedSupport # Ansys: [Acceleration, StandardEarthGravity, RotationalVelocity, 
                #   RotationalAcceleration, Pressure, HydrostaticPressure, Force, RemoteForce,
                #   Moment, FixedSupport, Displacement, RemoteDisplacement, FrictionlessSupport,
                #   FluidSolidInterface, SystemCouplingRegion, NodalForce, NodalPressure, 
                #   NodalDisplacement]
        -   region: [topboundary]
            type: NodalForce
            value: "[0, 0, -1]"
        -   region: [body]
            type: InitialVelocity
            value: "[0, 100*x[0], 0]" # X for undeformed, x for current
        -   region: [body]
            type: InitialDisplacement
            value: "[0, 0, 0]"
        -   region: [body]
            type: BodyForce
            value: [0.0, 0.0, -9.81]
    thermal:
        -   region: [leftboundary, rightboundary]
            type: Temperature # Ansys: [Temperature, Convection, Radiation, HeatFlow, Insulated, 
                #   HeatFlux, InternalHeatGeneration]
            value: 0.0
        #- 
        #    region: [body]
        #    type: Convection
        #    value: [Coefficient = 1e-5, AmbientTemperature = 22]
    fluid:
        -   region: [inflow]
            type: InjectionFlow
            value: 0.004 #m3/s


# should we include initial conditions here (e.g. under setup) or include them in the solver?
materials:
    - body:
        - name: mymat
            - structure: 
                - constitutive law: poroelastic
                - poroelastic: 
                    - Young's modulus: 1.e6
                    - Poisson's ratio: 0.3
                    - density: 1000
                    - thermal expansion coefficient: 1.2e-5 # 1/C  (contributes to strain, hence stress)
                - elastic: 
                    - Young's modulus: 1.e6
                    - Poisson's ratio: 0.3
                    - density: 1000
            - thermal:
                - constitutive law: linear isotropic
                - linear isotropic: 
                    - conductivity: 1.0 # (contributes to heat flux)  
            - fluid:
                - constitutive law: Darcy flow
                - Darcy flow:
                    - porosity: 0.1
    - body.internalBoundary:
        - name: myfracture
            - structure: 
                - constitutive law: cohesive
                - cohesive:
                    - penalty: 1
                    - critical stress: 1
                    - energy release rate: 1
                    - friction coefficient: 1
            - thermal:
                - constitutive law: linear isotropic
                - linear isotropic:
                    - thermal conductivity: 1.0   
            - fluid:
                - constitutive law: lubrication
                - lubrication: 
                    - viscosity: 1
                    - density: 1000

output: 
    - 
        format: vtk
        name: state
        directory: output
        print every: 100
        record: [displacement, stress, pressure]
    -    
        format: hdf5
        name: checkpoint
        directory: CHK
        print every: 100


solver: 
    - A: [structure, thermal, fluid]
      solver: newton
      convergence criterion: residual
      maximum number of iterations: 20
      tolerance: 1.e-3
    coupling: A
    time step: 0.1
    maximum time: 10

solver: 
    - A: structure
      solver: linear
    - B: fluid
      solver: linear
    - C: thermal
      solver: linear
    coupling: {A, B, C}
    time step: 0.1
    maximum time: 10

    # * means iterate what comes before until convergence
    #coupling :{"[structure, fluid]": newton, "thermal": linear}* 
    #coupling: {structure: linear, fluid: linear, thermal: linear}*
    #coupling: {structure: linear, fluid: linear, thermal: linear}